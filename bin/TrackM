#!/usr/bin/env python
###############################################################################
#                                                                             #
#    TrackM                                                         #
#                                                                             #
#    Description!!                                                            #
#                                                                             #
#    Copyright (C) Josh Daly                                                  #
#                                                                             #
###############################################################################
#                                                                             #
#    This program is free software: you can redistribute it and/or modify     #
#    it under the terms of the GNU General Public License as published by     #
#    the Free Software Foundation, either version 3 of the License, or        #
#    (at your option) any later version.                                      #
#                                                                             #
#    This program is distributed in the hope that it will be useful,          #
#    but WITHOUT ANY WARRANTY; without even the implied warranty of           #
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
#    GNU General Public License for more details.                             #
#                                                                             #
#    You should have received a copy of the GNU General Public License        #
#    along with this program. If not, see <http://www.gnu.org/licenses/>.     #
#                                                                             #
###############################################################################

__author__ = "Josh Daly"
__copyright__ = "Copyright 2014"
__credits__ = ["Josh Daly"]
__license__ = "GPLv3"
__version__ = "0.0.1"
__maintainer__ = "Josh Daly"
__email__ = "joshua.daly@uqconnect.edu.au"
__status__ = "Dev"

###############################################################################
###############################################################################
###############################################################################
###############################################################################

import argparse
import sys
import operator
import random

from multiprocessing import Pool
from subprocess import Popen, PIPE

import os
#import errno

import numpy as np
np.seterr(all='raise')

import matplotlib as mpl
import matplotlib.pyplot as plt
from matplotlib.patches import Rectangle
from mpl_toolkits.mplot3d import axes3d, Axes3D
from pylab import plot,subplot,axis,stem,show,figure

from colorsys import hsv_to_rgb as htr

###############################################################################
###############################################################################
###############################################################################
###############################################################################

def doWork(args):
    """Wrapper function to allow easy profiling"""
    # hook into core project code here. For example:
    from trackm.TrackM import TemplateClass
    TC = TemplateClass()
    TC.doWork(args)

###############################################################################
###############################################################################
###############################################################################
###############################################################################

if __name__ == '__main__':
    parser = argparse.ArgumentParser(formatter_class=argparse.ArgumentDefaultsHelpFormatter)
    parser.add_argument('-i','--input_file', help="Tab delimited file containing IDs, hits and length")
    parser.add_argument('-o','--output_file', default = "scatter_plot", help="Output file")
    parser.add_argument('-f','--image_format', default='png', help="Image format; default: png")
    parser.add_argument('-d','--dpi', type=int, default=400, help="Set image dpi")
    parser.add_argument('-t','--genome_tree_file', help="Genome tree file containing genome tree Id, img Id, genome tree position")
    parser.add_argument('-pt','--plot_title', help="Plot title")
    parser.add_argument('-pb','--plot_border', type=int, default=1,help="Adjust plot border to fit data")
    parser.add_argument('-ts','--text_size', type=int, default=2,help="Set text size for x and y labels")
    parser.add_argument('-sp','--show_plot', default='False',help="Show plot in terminal options: True. default: False")
    parser.add_argument('-cf','--colour_file', help="Colours file")
    #parser.add_argument('-m','--img_metadata', help="IMG metadata file")
    #parser.add_argument('-c','--contigs_file', help="gut_oral_contigs.csv")
    #parser.add_argument('-cs','--contig_size', type=int, default=0, help="Set contig size cutoff")

    # parse the arguments
    args = parser.parse_args()

    # profiling happens here. If you'd like to track the speed your code runs at
    # then set the following to True and voila!
    if(False):
        import cProfile
        cProfile.run('doWork(args)', 'profile')
        ##########################################
        ##########################################
        # Use this in python console!
        #import pstats
        #p = pstats.Stats('prof')
        #p.sort_stats('cumulative').print_stats(10)
        #p.sort_stats('time').print_stats(10)
        ##########################################
        ##########################################
    else:
        doWork(args)

###############################################################################
###############################################################################
###############################################################################
###############################################################################

